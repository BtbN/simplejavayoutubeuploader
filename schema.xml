<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration>
	<!-- Configure the database connection here -->
	<jdbc>
		<driver>org.h2.Driver</driver>
		<url>jdbc:h2:C:/Users/Dennis/SimpleJavaYoutubeUploader/youtubeuploader</url>
		<user>username</user>
		<password></password>

	</jdbc>
	<generator>
		<database>
			<name>org.jooq.util.h2.H2Database</name>
			<includes>.*</includes>
			<excludes></excludes>
			<inputSchema>PUBLIC</inputSchema>
			<customTypes>
				<customType>
					<name>java.util.GregorianCalendar</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.CalendarConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.Category</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.CategoryConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.ClaimOption</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.ClaimOptionConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.ClaimType</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.ClaimTypeConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.Comment</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.CommentConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.License</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.LicenseConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.Videoresponse</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.VideoresponseConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.Visibility</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.VisibilityConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.Asset</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.AssetConverter</converter>
				</customType>
				<customType>
					<name>org.chaosfisch.youtubeuploader.db.data.Syndication</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.SyndicationConverter</converter>
				</customType>
				<customType>
					<name>java.io.File</name>
					<converter>org.chaosfisch.youtubeuploader.db.converter.FileConverter</converter>
				</customType>
			</customTypes>
			<forcedTypes>
				<forcedType>
					<name>java.util.GregorianCalendar</name>
					<expressions>.*\.DATE_OF_.*</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.Category</name>
					<expressions>.*\.CATEGORY</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.ClaimOption</name>
					<expressions>.*\.*CLAIMOPTION</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.ClaimType</name>
					<expressions>.*\.*CLAIMTYPE</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.Comment</name>
					<expressions>.*\.COMMENT</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.License</name>
					<expressions>.*\.LICENSE</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.Videoresponse</name>
					<expressions>.*\.VIDEORESPONSE</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.Visibility</name>
					<expressions>.*\.VISIBILITY</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.Asset</name>
					<expressions>.*\.*ASSET</expressions>
				</forcedType>
				<forcedType>
					<name>org.chaosfisch.youtubeuploader.db.data.Syndication</name>
					<expressions>.*\.*SYNDICATION</expressions>
				</forcedType>
				<forcedType>
					<name>java.io.File</name>
					<expressions>.*\.FILE|.*\.DEFAULTDIR|.*\.ENDDIR</expressions>
				</forcedType>
			</forcedTypes>

		</database>
		<generate>
			<!-- Generation flags: See advanced configuration properties -->
			<!-- Primary key / foreign key relations should be generated and used.
			This is a prerequisite for various advanced features.
			Defaults to true -->
			<relations>true</relations>

			<!-- Generate deprecated code for backwards compatibility
			Defaults to true -->
			<deprecated>false</deprecated>

			<!-- Generate instance fields in your tables, as opposed to static
			fields. This simplifies aliasing.
			Defaults to true -->
			<instanceFields>true</instanceFields>

			<!-- Generate the javax.annotation.Generated annotation to indicate
			jOOQ version used for source code.
			Defaults to true -->
			<generatedAnnotation>true</generatedAnnotation>

			<!-- Generate jOOQ Record classes for type-safe querying. You can
			turn this off, if you don't need "active records" for CRUD
			Defaults to true -->
			<records>true</records>

			<!-- Generate POJOs in addition to Record classes for usage of the
			ResultQuery.fetchInto(Class) API
			Defaults to false -->
			<pojos>true</pojos>

			<!-- Generate immutable POJOs for usage of the ResultQuery.fetchInto(Class) API
			This overrides any value set in <pojos/>
			Defaults to false -->
			<immutablePojos>false</immutablePojos>

			<!-- Generate interfaces that will be implemented by records and/or pojos.
			You can also use these interfaces in Record.into(Class<?>) and similar
			methods, to let jOOQ return proxy objects for them.
			Defaults to false -->
			<interfaces>false</interfaces>

			<!-- Generate DAOs in addition to POJO classes
			Defaults to false -->
			<daos>true</daos>

			<!-- Annotate POJOs and Records with JPA annotations for increased
			compatibility and better integration with JPA/Hibernate, etc
			Defaults to false -->
			<jpaAnnotations>false</jpaAnnotations>

			<!-- Annotate POJOs and Records with JSR-303 validation annotations
			Defaults to false -->
			<validationAnnotations>false</validationAnnotations>

			<!-- Allow to turn off the generation of global object references, which include

			- Tables.java
			- Sequences.java
			- UDTs.java

			Turning off the generation of the above files may be necessary for very
			large schemas, which exceed the amount of allowed constants in a class's
			constant pool (64k) or, whose static initialiser would exceed 64k of
			byte code

			Defaults to true -->
			<globalObjectReferences>true</globalObjectReferences>
		</generate>
		<target>
			<!-- The destination package of your generated classes (within the
			destination directory) -->
			<packageName>org.chaosfisch.youtubeuploader.db.generated</packageName>
			<directory>D:/Development/temp</directory>
		</target>
		<strategy>
			<name>org.chaosfisch.youtubeuploader.CustomGeneratorStrategy</name>
		</strategy>
	</generator>
</configuration>