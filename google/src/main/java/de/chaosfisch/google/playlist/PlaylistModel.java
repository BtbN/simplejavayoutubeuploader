/**************************************************************************************************
 * Copyright (c) 2014 Dennis Fischer.                                                             *
 * All rights reserved. This program and the accompanying materials                               *
 * are made available under the terms of the GNU Public License v3.0+                             *
 * which accompanies this distribution, and is available at                                       *
 * http://www.gnu.org/licenses/gpl.html                                                           *
 *                                                                                                *
 * Contributors: Dennis Fischer                                                                   *
 **************************************************************************************************/

/**
 * This class is generated by jOOQ
 */
package de.chaosfisch.google.playlist;

import javafx.beans.property.SimpleBooleanProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleLongProperty;
import javafx.beans.property.SimpleStringProperty;

public class PlaylistModel {

	private final SimpleIntegerProperty id            = new SimpleIntegerProperty();
	private final SimpleIntegerProperty accountId     = new SimpleIntegerProperty();
	private final SimpleStringProperty  youtubeId     = new SimpleStringProperty();
	private final SimpleStringProperty  title         = new SimpleStringProperty();
	private final SimpleStringProperty  thumbnail     = new SimpleStringProperty();
	private final SimpleBooleanProperty privacyStatus = new SimpleBooleanProperty();
	private final SimpleLongProperty    itemCount     = new SimpleLongProperty();
	private final SimpleBooleanProperty hidden        = new SimpleBooleanProperty();

	@Override
	public int hashCode() {
		return youtubeId.hashCode();
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (!(obj instanceof PlaylistModel)) {
			return false;
		}
		final PlaylistModel that = (PlaylistModel) obj;
		return youtubeId.equals(that.youtubeId);
	}

	@Override
	public String toString() {
		return getTitle();
	}

	public String getTitle() {
		return title.get();
	}

	public void setTitle(final String title) {
		this.title.set(title);
	}

	public int getId() {
		return id.get();
	}

	public void setId(final int id) {
		this.id.set(id);
	}

	public SimpleIntegerProperty idProperty() {
		return id;
	}

	public int getAccountId() {
		return accountId.get();
	}

	public void setAccountId(final int accountId) {
		this.accountId.set(accountId);
	}

	public SimpleIntegerProperty accountIdProperty() {
		return accountId;
	}

	public String getYoutubeId() {
		return youtubeId.get();
	}

	public void setYoutubeId(final String youtubeId) {
		this.youtubeId.set(youtubeId);
	}

	public SimpleStringProperty youtubeIdProperty() {
		return youtubeId;
	}

	public SimpleStringProperty titleProperty() {
		return title;
	}

	public String getThumbnail() {
		return thumbnail.get();
	}

	public void setThumbnail(final String thumbnail) {
		this.thumbnail.set(thumbnail);
	}

	public SimpleStringProperty thumbnailProperty() {
		return thumbnail;
	}

	public boolean getPrivacyStatus() {
		return privacyStatus.get();
	}

	public void setPrivacyStatus(final boolean privacyStatus) {
		this.privacyStatus.set(privacyStatus);
	}

	public SimpleBooleanProperty privacyStatusProperty() {
		return privacyStatus;
	}

	public long getItemCount() {
		return itemCount.get();
	}

	public void setItemCount(final long itemCount) {
		this.itemCount.set(itemCount);
	}

	public SimpleLongProperty itemCountProperty() {
		return itemCount;
	}

	public boolean getHidden() {
		return hidden.get();
	}

	public void setHidden(final boolean hidden) {
		this.hidden.set(hidden);
	}

	public SimpleBooleanProperty hiddenProperty() {
		return hidden;
	}

/*
if (Strings.isNullOrEmpty(title)) {
	throw new IllegalArgumentException(Validation.TITLE);
}
if (Validation.TITLE_MAX_LENGTH < title.getBytes().length) {
	throw new IllegalArgumentException(Validation.TITLE_SIZE);
}
	public interface Validation {
		String TITLE      = "TITLE";
		String TITLE_SIZE = "TITLE_SIZE";
		String ACCOUNT    = "ACCOUNT";

		int TITLE_MAX_LENGTH = 150;
	}*/
}
