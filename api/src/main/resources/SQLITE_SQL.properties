#***************************************************************************************************
# Copyright (c) 2014 Dennis Fischer.                                                               *
# All rights reserved. This program and the accompanying materials                                 *
# are made available under the terms of the GNU Public License v3.0+                               *
# which accompanies this distribution, and is available at                                         *
# http://www.gnu.org/licenses/gpl.html                                                             *
#                                                                                                  *
# Contributors: Dennis Fischer                                                                     *
#***************************************************************************************************

UPLOAD_COUNT=SELECT COUNT(*) FROM uploads;
UPLOAD_GET=SELECT * FROM uploads WHERE id = ?;
UPLOAD_GET_ALL=SELECT * FROM uploads;
UPLOAD_REMOVE=DELETE FROM uploads WHERE id = ?;
UPLOAD_INSERT=INSERT INTO uploads (uploadurl, videoid, FILE, enddir, thumbnail, dateTimeOfStart, dateTimeOfRelease, dateTimeOfEnd, "ORDER", progress, stopAfter, fileSize, status, accountId, id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
UPLOAD_UPDATE=UPDATE uploads SET uploadurl = ?, videoid = ?, FILE = ?, enddir = ?, thumbnail = ?, dateTimeOfStart = ?, dateTimeOfRelease = ?, dateTimeOfEnd = ?, "ORDER" = ?, progress = ?, stopAfter = ?, fileSize = ?, status = ?, accountId = ? WHERE id = ?;
COOKIE_GET=SELECT * FROM accounts_cookies WHERE accountId = ? AND name = ?;
COOKIE_GET_ALL=SELECT * FROM accounts_cookies;
COOKIE_GET_ALL_BY_ACCOUNT=SELECT * FROM accounts_cookies WHERE accountId = ?;
COOKIE_UPDATE=UPDATE accounts_cookies SET value = ?, domain = ?, discard = ?, path = ?, maxAge = ?, secure = ?, version = ?, last_modified = current_timestamp WHERE accountId = ? AND name = ?;
COOKIE_INSERT=INSERT INTO accounts_cookies (value, domain, discard, path, maxAge, secure, version, accountId, name, last_modified) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp)
COOKIE_REMOVE=DELETE FROM accounts_cookies WHERE accountId = ? AND name = ?;
COOKIE_CLEAR_OLD=DELETE FROM accounts_cookies WHERE last_modified < (datetime(current_timestamp,'-1 minute')) AND accountId = ?;
FIELD_GET_ALL=SELECT * FROM accounts_fields;
FIELD_GET_ALL_BY_ACCOUNT=SELECT * FROM accounts_fields WHERE accountId = ?;
FIELD_INSERT=INSERT INTO accounts_fields (accountId, name, last_modified) VALUES (?, ?, current_timestamp);
FIELD_UPDATE=UPDATE accounts_fields SET last_modified = current_timestamp WHERE accountId=? AND name=?;
FIELD_REMOVE=DELETE FROM accounts_fields WHERE accountId = ?;
FIELD_CLEAR_OLD=DELETE FROM accounts_fields WHERE last_modified < (datetime(current_timestamp,'-1 minute')) AND accountId = ?;
ACCOUNT_GET_ALL=SELECT * FROM accounts;
ACCOUNT_INSERT=INSERT INTO accounts (name, email, refreshToken, type, youtubeId) VALUES (?, ?, ?, ?, ?);
ACCOUNT_UPDATE=UPDATE accounts SET name = ?, email = ?, refreshToken = ?, type = ? WHERE youtubeId = ?;
ACCOUNT_REMOVE=DELETE FROM accounts WHERE youtubeId = ?;
ACCOUNT_GET=SELECT * FROM accounts WHERE youtubeId = ?;
SOCIAL_GET_ALL=SELECT * FROM uploads_social;
SOCIAL_GET=SELECT * FROM uploads_social WHERE uploadId = ?;
SOCIAL_INSERT=INSERT INTO uploads_social (message, facebook, twitter, gplus, uploadId) VALUES (?, ?, ?, ?, ?);
SOCIAL_UPDATE=UPDATE uploads_social SET message = ?, facebook = ?, twitter = ?, gplus = ? WHERE uploadId = ?;
SOCIAL_REMOVE=DELETE FROM uploads_social WHERE uploadId = ?;
MONETIZATION_GET_ALL=SELECT * FROM uploads_monetization;
MONETIZATION_REMOVE=DELETE FROM uploads_monetization WHERE uploadId = ?;
MONETIZATION_GET=SELECT * FROM uploads_monetization WHERE uploadId = ?;
MONETIZATION_INSERT=INSERT INTO uploads_monetization (syndication, claimType, claimOption, asset, instreamDefaults, claim, overlay, trueview, instream, product, partner, title, description, customId, notes, tmsid, isan, eidr, episodeTitle, seasonNumber, episodeNumber, uploadId) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
MONETIZATION_UPDATE=UPDATE uploads_monetization SET syndication = ?, claimType = ?, claimOption = ?, asset = ?, instreamDefaults = ?, claim = ?, overlay = ?, trueview = ?, instream = ?, product = ?, partner = ?, title = ?, description = ?, customId = ?, notes = ?, tmsid = ?, isan = ?, eidr = ?, episodeTitle = ?, seasonNumber = ?, episodeNumber = ? WHERE uploadId = ?;
PLAYLIST_GET_ALL=SELECT * FROM playlists;
PLAYLIST_GET=SELECT * FROM playlists WHERE youtubeId = ?;
PLAYLIST_GET_ALL_BY_ACCOUNT=SELECT * FROM playlists WHERE accountId = ?;
PLAYLIST_INSERT=INSERT INTO playlists (title, thumbnail, privacyStatus, itemCount, description, accountId, youtubeId, last_modified) VALUES (?, ?, ?, ?, ?, ?, ?, current_timestamp);
PLAYLIST_UPDATE=UPDATE playlists SET title = ?, thumbnail = ?, privacyStatus = ?, itemCount = ?, description = ?, accountId = ?, last_modified = current_timestamp WHERE youtubeId = ?;
PLAYLIST_REMOVE=DELETE FROM playlists WHERE youtubeId = ?;
PLAYLIST_CLEAR_OLD=DELETE FROM playlists WHERE last_modified < (datetime(current_timestamp,'-1 minute')) AND accountId = ?;
PERMISSION_GET_ALL=SELECT * FROM uploads_permission;
PERMISSION_GET=SELECT * FROM uploads_permission WHERE uploadId = ?;
PERMISSION_INSERT=INSERT INTO uploads_permission (visibility, threedD, comment, commentvote, embed, rate, ageRestricted, publicStatsViewable, uploadId) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
PERMISSION_UPDATE=UPDATE uploads_permission SET ageRestricted = ?, comment = ?, commentvote = ?, threedD = ?, embed = ?, rate = ?, publicStatsViewable = ?, visibility = ? WHERE uploadId = ?;
PERMISSION_REMOVE=DELETE FROM uploads_permission WHERE uploadId = ?;
METADATA_GET_ALL=SELECT * FROM uploads_metadata;
METADATA_GET=SELECT * FROM uploads_metadata WHERE uploadId = ?;
METADATA_INSERT=INSERT INTO uploads_metadata (category, license, title, description, tags, uploadId) VALUES (?, ?, ?, ?, ?, ?);
METADATA_UPDATE=UPDATE uploads_metadata SET category = ?, license = ?, title = ?, description = ?, tags = ? WHERE uploadId = ?;
METADATA_REMOVE=DELETE FROM uploads_metadata WHERE uploadId = ?;
CATEGORY_GET_ALL=SELECT * FROM categories;
CATEGORY_GET=SELECT * FROM categories WHERE youtubeId = ?;
CATEGORY_INSERT=INSERT INTO categories (name, youtubeId) VALUES (?, ?);
CATEGORY_UPDATE=UPDATE categories SET name=? WHERE youtubeId=?;
CATEGORY_REMOVE=DELETE FROM categories WHERE youtubeId = ?;