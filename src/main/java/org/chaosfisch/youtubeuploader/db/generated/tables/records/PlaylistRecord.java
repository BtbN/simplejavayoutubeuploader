/*
 * Copyright (c) 2013 Dennis Fischer.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0+
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 *
 * Contributors: Dennis Fischer
 */

/**
 * This class is generated by jOOQ
 */
package org.chaosfisch.youtubeuploader.db.generated.tables.records;

/** This class is generated by jOOQ. */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.0.0"},
		comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked"})
public class PlaylistRecord extends org.jooq.impl.UpdatableRecordImpl<PlaylistRecord> implements org.jooq.Record11<Integer, String, Boolean, String, String, String, Integer, String, Boolean, Integer, java.util.GregorianCalendar> {

	private static final long serialVersionUID = 2107453048;

	/** Setter for <code>PUBLIC.PLAYLIST.ID</code>. */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.ID</code>. */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.PKEY</code>. */
	public void setPkey(String value) {
		setValue(1, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.PKEY</code>. */
	public String getPkey() {
		return (String) getValue(1);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.PRIVATE</code>. */
	public void setPrivate(Boolean value) {
		setValue(2, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.PRIVATE</code>. */
	public Boolean getPrivate() {
		return (Boolean) getValue(2);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.TITLE</code>. */
	public void setTitle(String value) {
		setValue(3, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.TITLE</code>. */
	public String getTitle() {
		return (String) getValue(3);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.URL</code>. */
	public void setUrl(String value) {
		setValue(4, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.URL</code>. */
	public String getUrl() {
		return (String) getValue(4);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.THUMBNAIL</code>. */
	public void setThumbnail(String value) {
		setValue(5, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.THUMBNAIL</code>. */
	public String getThumbnail() {
		return (String) getValue(5);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.NUMBER</code>. */
	public void setNumber(Integer value) {
		setValue(6, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.NUMBER</code>. */
	public Integer getNumber() {
		return (Integer) getValue(6);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.SUMMARY</code>. */
	public void setSummary(String value) {
		setValue(7, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.SUMMARY</code>. */
	public String getSummary() {
		return (String) getValue(7);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.HIDDEN</code>. */
	public void setHidden(Boolean value) {
		setValue(8, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.HIDDEN</code>. */
	public Boolean getHidden() {
		return (Boolean) getValue(8);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.ACCOUNT_ID</code>. */
	public void setAccountId(Integer value) {
		setValue(9, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.ACCOUNT_ID</code>. */
	public Integer getAccountId() {
		return (Integer) getValue(9);
	}

	/** Setter for <code>PUBLIC.PLAYLIST.DATE_OF_MODIFIED</code>. */
	public void setDateOfModified(java.util.GregorianCalendar value) {
		setValue(10, value);
	}

	/** Getter for <code>PUBLIC.PLAYLIST.DATE_OF_MODIFIED</code>. */
	public java.util.GregorianCalendar getDateOfModified() {
		return (java.util.GregorianCalendar) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/** {@inheritDoc} */
	@Override
	public org.jooq.Record1<Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/** {@inheritDoc} */
	@Override
	public org.jooq.Row11<Integer, String, Boolean, String, String, String, Integer, String, Boolean, Integer, java.util.GregorianCalendar> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Row11<Integer, String, Boolean, String, String, String, Integer, String, Boolean, Integer, java.util.GregorianCalendar> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<Integer> field1() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.ID;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<String> field2() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.PKEY;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<Boolean> field3() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.PRIVATE;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<String> field4() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.TITLE;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<String> field5() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.URL;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<String> field6() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.THUMBNAIL;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<Integer> field7() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.NUMBER;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<String> field8() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.SUMMARY;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<Boolean> field9() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.HIDDEN;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<Integer> field10() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.ACCOUNT_ID;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Field<java.util.GregorianCalendar> field11() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.DATE_OF_MODIFIED;
	}

	/** {@inheritDoc} */
	@Override
	public Integer value1() {
		return getId();
	}

	/** {@inheritDoc} */
	@Override
	public String value2() {
		return getPkey();
	}

	/** {@inheritDoc} */
	@Override
	public Boolean value3() {
		return getPrivate();
	}

	/** {@inheritDoc} */
	@Override
	public String value4() {
		return getTitle();
	}

	/** {@inheritDoc} */
	@Override
	public String value5() {
		return getUrl();
	}

	/** {@inheritDoc} */
	@Override
	public String value6() {
		return getThumbnail();
	}

	/** {@inheritDoc} */
	@Override
	public Integer value7() {
		return getNumber();
	}

	/** {@inheritDoc} */
	@Override
	public String value8() {
		return getSummary();
	}

	/** {@inheritDoc} */
	@Override
	public Boolean value9() {
		return getHidden();
	}

	/** {@inheritDoc} */
	@Override
	public Integer value10() {
		return getAccountId();
	}

	/** {@inheritDoc} */
	@Override
	public java.util.GregorianCalendar value11() {
		return getDateOfModified();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/** Create a detached PlaylistRecord */
	public PlaylistRecord() {
		super(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST);
	}
}
