/*
 * Copyright (c) 2013 Dennis Fischer.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0+
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 *
 * Contributors: Dennis Fischer
 */

/**
 * This class is generated by jOOQ
 */
package org.chaosfisch.youtubeuploader.db.generated.tables.daos;

/** This class is generated by jOOQ. */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.0.0"},
		comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked"})
public class PlaylistDao extends org.jooq.impl.DAOImpl<org.chaosfisch.youtubeuploader.db.generated.tables.records.PlaylistRecord, org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist, Integer> {

	/** Create a new PlaylistDao without any configuration */
	public PlaylistDao() {
		super(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST, org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist.class);
	}

	/** Create a new PlaylistDao with an attached configuration */
	public PlaylistDao(org.jooq.Configuration configuration) {
		super(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST, org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist.class, configuration);
	}

	/** {@inheritDoc} */
	@Override
	protected Integer getId(org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist object) {
		return object.getId();
	}

	/** Fetch records that have <code>ID IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchById(Integer... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.ID, values);
	}

	/** Fetch a unique record that has <code>ID = value</code> */
	public org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist fetchOneById(Integer value) {
		return fetchOne(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.ID, value);
	}

	/** Fetch records that have <code>PKEY IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByPkey(String... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.PKEY, values);
	}

	/** Fetch records that have <code>PRIVATE IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByPrivate(Boolean... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.PRIVATE, values);
	}

	/** Fetch records that have <code>TITLE IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByTitle(String... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.TITLE, values);
	}

	/** Fetch records that have <code>URL IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByUrl(String... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.URL, values);
	}

	/** Fetch records that have <code>THUMBNAIL IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByThumbnail(String... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.THUMBNAIL, values);
	}

	/** Fetch records that have <code>NUMBER IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByNumber(Integer... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.NUMBER, values);
	}

	/** Fetch records that have <code>SUMMARY IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchBySummary(String... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.SUMMARY, values);
	}

	/** Fetch records that have <code>HIDDEN IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByHidden(Boolean... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.HIDDEN, values);
	}

	/** Fetch records that have <code>ACCOUNT_ID IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByAccountId(Integer... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.ACCOUNT_ID, values);
	}

	/** Fetch records that have <code>DATE_OF_MODIFIED IN (values)</code> */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.Playlist> fetchByDateOfModified(java.util.GregorianCalendar... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.Playlist.PLAYLIST.DATE_OF_MODIFIED, values);
	}
}
