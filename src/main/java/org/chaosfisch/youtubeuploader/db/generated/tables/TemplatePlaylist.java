/*
 * Copyright (c) 2013 Dennis Fischer.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0+
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 *
 * Contributors: Dennis Fischer
 */

/**
 * This class is generated by jOOQ
 */
package org.chaosfisch.youtubeuploader.db.generated.tables;

/** This class is generated by jOOQ. */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.0.0"},
		comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked"})
public class TemplatePlaylist extends org.jooq.impl.TableImpl<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord> {

	private static final long serialVersionUID = -1268820332;

	/** The singleton instance of <code>PUBLIC.TEMPLATE_PLAYLIST</code> */
	public static final TemplatePlaylist TEMPLATE_PLAYLIST = new TemplatePlaylist();

	/** The class holding records for this type */
	@Override
	public Class<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord> getRecordType() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord.class;
	}

	/** The column <code>PUBLIC.TEMPLATE_PLAYLIST.ID</code>. */
	public final org.jooq.TableField<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this);

	/** The column <code>PUBLIC.TEMPLATE_PLAYLIST.PLAYLIST_ID</code>. */
	public final org.jooq.TableField<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, Integer> PLAYLIST_ID = createField("PLAYLIST_ID", org.jooq.impl.SQLDataType.INTEGER, this);

	/** The column <code>PUBLIC.TEMPLATE_PLAYLIST.TEMPLATE_ID</code>. */
	public final org.jooq.TableField<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, Integer> TEMPLATE_ID = createField("TEMPLATE_ID", org.jooq.impl.SQLDataType.INTEGER, this);

	/** Create a <code>PUBLIC.TEMPLATE_PLAYLIST</code> table reference */
	public TemplatePlaylist() {
		super("TEMPLATE_PLAYLIST", org.chaosfisch.youtubeuploader.db.generated.Public.PUBLIC);
	}

	/** Create an aliased <code>PUBLIC.TEMPLATE_PLAYLIST</code> table reference */
	public TemplatePlaylist(String alias) {
		super(alias, org.chaosfisch.youtubeuploader.db.generated.Public.PUBLIC, TemplatePlaylist.TEMPLATE_PLAYLIST);
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Identity<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, Integer> getIdentity() {
		return org.chaosfisch.youtubeuploader.db.generated.Keys.IDENTITY_TEMPLATE_PLAYLIST;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.UniqueKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord> getPrimaryKey() {
		return org.chaosfisch.youtubeuploader.db.generated.Keys.CONSTRAINT_F;
	}

	/** {@inheritDoc} */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord>> getKeys() {
		return java.util
				.Arrays
				.<org.jooq.UniqueKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord>>asList(org.chaosfisch.youtubeuploader.db.generated.Keys.CONSTRAINT_F);
	}

	/** {@inheritDoc} */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, ?>> getReferences() {
		return java.util
				.Arrays
				.<org.jooq.ForeignKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, ?>>asList(org.chaosfisch.youtubeuploader.db.generated.Keys.CONSTRAINT_B8, org.chaosfisch.youtubeuploader.db.generated.Keys.CONSTRAINT_B88);
	}

	/** {@inheritDoc} */
	@Override
	public TemplatePlaylist as(String alias) {
		return new TemplatePlaylist(alias);
	}
}
