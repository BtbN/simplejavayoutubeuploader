/*******************************************************************************
 * Copyright (c) 2013 Dennis Fischer.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0+
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 * 
 * Contributors: Dennis Fischer
 ******************************************************************************/
/**
 * This class is generated by jOOQ
 */
package org.chaosfisch.youtubeuploader.db.generated.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "3.0.0"},
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked" })
public class TemplatePlaylistDao extends org.jooq.impl.DAOImpl<org.chaosfisch.youtubeuploader.db.generated.tables.records.TemplatePlaylistRecord, org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist, java.lang.Integer> {

	/**
	 * Create a new TemplatePlaylistDao without any factory
	 */
	public TemplatePlaylistDao() {
		super(org.chaosfisch.youtubeuploader.db.generated.tables.TemplatePlaylist.TEMPLATE_PLAYLIST, org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist.class);
	}

	/**
	 * Create a new TemplatePlaylistDao with an attached factory
	 */
	public TemplatePlaylistDao(org.jooq.impl.Executor factory) {
		super(org.chaosfisch.youtubeuploader.db.generated.tables.TemplatePlaylist.TEMPLATE_PLAYLIST, org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist.class, factory);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected java.lang.Integer getId(org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist> fetchById(java.lang.Integer... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.TemplatePlaylist.TEMPLATE_PLAYLIST.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist fetchOneById(java.lang.Integer value) {
		return fetchOne(org.chaosfisch.youtubeuploader.db.generated.tables.TemplatePlaylist.TEMPLATE_PLAYLIST.ID, value);
	}

	/**
	 * Fetch records that have <code>PLAYLIST_ID IN (values)</code>
	 */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist> fetchByPlaylistId(java.lang.Integer... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.TemplatePlaylist.TEMPLATE_PLAYLIST.PLAYLIST_ID, values);
	}

	/**
	 * Fetch records that have <code>TEMPLATE_ID IN (values)</code>
	 */
	public java.util.List<org.chaosfisch.youtubeuploader.db.generated.tables.pojos.TemplatePlaylist> fetchByTemplateId(java.lang.Integer... values) {
		return fetch(org.chaosfisch.youtubeuploader.db.generated.tables.TemplatePlaylist.TEMPLATE_PLAYLIST.TEMPLATE_ID, values);
	}
}
