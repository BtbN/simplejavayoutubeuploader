/*
 * Copyright (c) 2013 Dennis Fischer.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Public License v3.0+
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/gpl.html
 *
 * Contributors: Dennis Fischer
 */

/**
 * This class is generated by jOOQ
 */
package org.chaosfisch.youtubeuploader.db.generated.tables;

/** This class is generated by jOOQ. */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.0.0"},
		comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked"})
public class Account extends org.jooq.impl.TableImpl<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord> {

	private static final long serialVersionUID = -226827141;

	/** The singleton instance of <code>PUBLIC.ACCOUNT</code> */
	public static final Account ACCOUNT = new Account();

	/** The class holding records for this type */
	@Override
	public Class<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord> getRecordType() {
		return org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord.class;
	}

	/** The column <code>PUBLIC.ACCOUNT.ID</code>. */
	public final org.jooq.TableField<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this);

	/** The column <code>PUBLIC.ACCOUNT.NAME</code>. */
	public final org.jooq.TableField<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord, String> NAME = createField("NAME", org
			.jooq
			.impl
			.SQLDataType
			.VARCHAR
			.length(255), this);

	/** The column <code>PUBLIC.ACCOUNT.PASSWORD</code>. */
	public final org.jooq.TableField<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord, String> PASSWORD = createField("PASSWORD", org
			.jooq
			.impl
			.SQLDataType
			.VARCHAR
			.length(255), this);

	/** Create a <code>PUBLIC.ACCOUNT</code> table reference */
	public Account() {
		super("ACCOUNT", org.chaosfisch.youtubeuploader.db.generated.Public.PUBLIC);
	}

	/** Create an aliased <code>PUBLIC.ACCOUNT</code> table reference */
	public Account(String alias) {
		super(alias, org.chaosfisch.youtubeuploader.db.generated.Public.PUBLIC, Account.ACCOUNT);
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.Identity<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord, Integer> getIdentity() {
		return org.chaosfisch.youtubeuploader.db.generated.Keys.IDENTITY_ACCOUNT;
	}

	/** {@inheritDoc} */
	@Override
	public org.jooq.UniqueKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord> getPrimaryKey() {
		return org.chaosfisch.youtubeuploader.db.generated.Keys.CONSTRAINT_E;
	}

	/** {@inheritDoc} */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord>> getKeys() {
		return java.util
				.Arrays
				.<org.jooq.UniqueKey<org.chaosfisch.youtubeuploader.db.generated.tables.records.AccountRecord>>asList(org.chaosfisch.youtubeuploader.db.generated.Keys.CONSTRAINT_E);
	}

	/** {@inheritDoc} */
	@Override
	public Account as(String alias) {
		return new Account(alias);
	}
}
