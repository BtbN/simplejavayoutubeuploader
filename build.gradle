def javaFxHome = "${System.properties['java.home']}";


allprojects
{
	apply plugin: 'java'
	apply plugin: 'application'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    buildDir = 'target'

	version = '3.0-SNAPSHOT'
	mainClassName = 'org.chaosfisch.youtubeuploader.SimpleJavaYoutubeUploader'
	sourceSets.main.java.srcDirs = ['src']
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

configurations {
    //we do not want to have jfxrt.jar in the classpath when creating the jar,
    //therefore a seperate configuration is required
    providedCompile
}

compileJava {
    //add required JavaFX libs to compile classpath
    sourceSets.main.compileClasspath += configurations.providedCompile
}
 
run {
    //add required JavaFX libs to runtime classpath
    classpath += configurations.providedCompile
}

jar { 
    manifest {
        attributes 'Implementation-Title': 'Simple Java Youtube Uploader 3.0 Nightly',
                'Implementation-Version': 'Nightly',
                'Implementation-Vendor': 'Dennis Fischer aka CHAOSFISCH',
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Main-Class': mainClassName
                
                      def manifestCp = configurations.runtime.files.collect  {
        File file = it
        "lib/${file.name}"
        }.join(' ')


         configurations.runtime.getAllDependencies().withType(ProjectDependency).each {dep->

            def depProj = dep.getDependencyProject()
            def libFilePaths = project(depProj.path).libsDir.list().collect{ inFile-> "lib/${inFile}"  }.join(' ')
            logger.info"Adding libs from project ${depProj.name}: [- ${libFilePaths} -]"
            manifestCp += ' '+libFilePaths
        }

        logger.lifecycle("")
        logger.lifecycle("---Manifest-Class-Path: ${manifestCp}")
        attributes 'Class-Path': manifestCp
    }
} 

dependencies {
    compile 'org.javalite:activejdbc:1.4.5', 'com.h2database:h2:1.3.170', 'org.apache.httpcomponents:httpclient:4.2.2', 'com.google.inject:guice:3.0+', 'org.bushe:eventbus:1+',
    'com.thoughtworks.xstream:xstream:1+', 'ch.qos.logback:logback-classic:1+', 'c3p0:c3p0:+', 'org.apache.httpcomponents:httpmime:4.2.2', 'org.jfxtras:jfxtras-labs:2.2-r5-SNAPSHOT',
    'com.google.guava:guava:14+'
    providedCompile files("$javaFxHome/lib/jfxrt.jar")
    
   	testCompile group: 'junit', name: 'junit', version: '4.+'
}


task(runAnt, dependsOn: 'instrument', type: JavaExec) {
    main = 'org.chaosfisch.youtubeuploader.SimpleJavaYoutubeUploader'
    classpath = sourceSets.main.runtimeClasspath
    args ''
}

defaultTasks 'runSimple'